function main() {
  var period1 = 'LAST_7_DAYS';  
  var period2 = 'LAST_14_DAYS';
  var yesterday = 'YESTERDAY'; // For retrieving yesterday's performance

  var clicks = 'metrics.clicks';
  var cost = 'metrics.cost_micros'; // Note: cost is usually in micros
  var conv = 'metrics.conversions';
  //var conversionValue = 'metrics.conversions_value'; // For Conversion Value in micros
  var campaignName = 'campaign.name';

  // List of selected metrics
  var p = [campaignName, clicks, cost, conv]; 

  // Query for the last 7 days
  var awl1 = 'SELECT ' + p.join(',') + ' FROM campaign WHERE segments.date DURING ' + period1;
  Logger.log('Query for last 7 days: ' + awl1);
  
  // Query for the last 14 days
  var awl2 = 'SELECT ' + p.join(',') + ' FROM campaign WHERE segments.date DURING ' + period2;
  Logger.log('Query for last 14 days: ' + awl2);

  // Query for yesterday's performance
  var awlYesterday = 'SELECT ' + p.join(',') + ' FROM campaign WHERE segments.date DURING ' + yesterday;
  Logger.log('Query for yesterday: ' + awlYesterday);

  // Function to process and store report results
  function getReportData(report) {
    var data = {};
    while (report.hasNext()) {
      var row = report.next();
      var clicksValue = row[clicks];
      var convValue = row[conv];
      var costValue = row[cost] / 1e6; // Convert micros to standard currency
      //var conversionValueValue = row[conversionValue]; // Convert micros to standard currency

      // Only include campaigns with cost > 0
      if (costValue > 0) {
        var cvrValue = clicksValue > 0 ? (convValue / clicksValue) * 100 : 0; // Convert CVR to percentage
        var cpcValue = clicksValue > 0 ? costValue / clicksValue : 0; // Calculate CPC
        //var aovValue = convValue > 0 ? conversionValueValue / convValue : 0; // Calculate AOV
        var cpaValue = convValue > 0 ? costValue / convValue : 0; // Calculate CPA
        //var roasValue = costValue > 0 ? conversionValueValue / costValue : 0; // Calculate ROAS

        data[row[campaignName]] = {
          clicks: clicksValue,
          conversions: convValue,
          cost: costValue,
          //conversionValue: conversionValueValue,
          cvr: cvrValue,
          cpc: cpcValue,
          //aov: aovValue,
          cpa: cpaValue,
          //roas: roasValue
        };
      }
    }
    return data;
  }

  // Retrieve and store data for the last 7 days
  var report1 = AdsApp.report(awl1).rows();
  var data7Days = getReportData(report1);
  
  // Retrieve and store data for the last 14 days
  var report2 = AdsApp.report(awl2).rows();
  var data14Days = getReportData(report2);
  
  // Retrieve and store data for yesterday
  var reportYesterday = AdsApp.report(awlYesterday).rows();
  var dataYesterday = getReportData(reportYesterday);

  // Calculate total values for a dataset
  function calculateTotals(data) {
    var totals = {
      clicks: 0,
      conversions: 0,
      cost: 0,
      //conversionValue: 0
    };
    for (var campaign in data) {
      totals.clicks += Number(data[campaign].clicks);
      totals.conversions += data[campaign].conversions;
      totals.cost += data[campaign].cost;
      //totals.conversionValue += data[campaign].conversionValue;
    }
    totals.cvr = totals.clicks > 0 ? (totals.conversions / totals.clicks) * 100 : 0;
    totals.cpc = totals.clicks > 0 ? totals.cost / totals.clicks : 0;
    //totals.aov = totals.conversions > 0 ? totals.conversionValue / totals.conversions : 0;
    totals.cpa = totals.conversions > 0 ? totals.cost / totals.conversions : 0;
    //totals.roas = totals.cost > 0 ? totals.conversionValue / totals.cost : 0;
    return totals;
  }

  // Convert dataYesterday object to an array and sort by spend (cost) in descending order
  var sortedDataYesterday = Object.keys(dataYesterday)
    .map(function(campaignName) {
      return {
        name: campaignName,
        ...dataYesterday[campaignName]
      };
    })
    .sort(function(a, b) {
      return b.cost - a.cost;
    });

  // Calculate totals for each period
  var totals7Days = calculateTotals(data7Days);
  var totals14Days = calculateTotals(data14Days);
  var totalsYesterday = calculateTotals(dataYesterday);

  // Debugging - Print yesterday's data
  Logger.log("Yesterday's Data (Sorted by Spend):");
  sortedDataYesterday.forEach(function(item) {
    Logger.log("Campaign Name: " + item.name + ", Cost: " + item.cost);
  });

  // Function to compare data
  function compareData(data7, data14) {
    var results = [];
    for (var campaignName in data7) {
      if (data14[campaignName]) {
        var data7Item = data7[campaignName];
        var data14Item = data14[campaignName];
        
        var cvr7 = data7Item.cvr.toFixed(2) + '%';
        var cvr14 = data14Item.cvr.toFixed(2) + '%';
        var cpc7 = data7Item.cpc.toFixed(2);
        var cpc14 = data14Item.cpc.toFixed(2);
        //var aov7 = data7Item.aov.toFixed(2);
        //var aov14 = data14Item.aov.toFixed(2);
        var cpa7 = data7Item.cpa.toFixed(2);
        var cpa14 = data14Item.cpa.toFixed(2);
        //var roas7 = data7Item.roas.toFixed(2);
        //var roas14 = data14Item.roas.toFixed(2);
        
        var cvrDiff = data14Item.cvr > 0 ? ((data7Item.cvr - data14Item.cvr) / data14Item.cvr) * 100 : 0; // Calculate CVR difference
        var cpcDiff = data14Item.cpc > 0 ? ((data7Item.cpc - data14Item.cpc) / data14Item.cpc) * 100 : 0; // Calculate CPC difference
        //var aovDiff = data14Item.aov > 0 ? ((data7Item.aov - data14Item.aov) / data14Item.aov) * 100 : 0; // Calculate AOV difference
        var cpaDiff = data14Item.cpa > 0 ? ((data7Item.cpa - data14Item.cpa) / data14Item.cpa) * 100 : 0; // Calculate CPA difference
        //var roasDiff = data14Item.roas > 0 ? ((data7Item.roas - data14Item.roas) / data14Item.roas) * 100 : 0; // Calculate ROAS difference
        
        results.push({
          campaignName: campaignName,
          cvr7Days: cvr7,
          cvr14Days: cvr14,
          cvrDiff: cvrDiff.toFixed(2) + '%',
          cpc7Days: cpc7,
          cpc14Days: cpc14,
          cpcDiff: cpcDiff.toFixed(2) + '%',
          //aov7Days: aov7,
          //aov14Days: aov14,
          //aovDiff: aovDiff.toFixed(2) + '%',
          cpa7Days: cpa7,
          cpa14Days: cpa14,
          cpaDiff: cpaDiff.toFixed(2) + '%',
          //roas7Days: roas7,
          //roas14Days: roas14,
          //roasDiff: roasDiff.toFixed(2) + '%'
        });
      }
    }
    return results;
  }

  var comparisonResults = compareData(data7Days, data14Days);

  // Construct email body with detailed tables
  var emailBody = "<h1>Campaign Performance Report</h1>";
  emailBody += "<h2>Performance Overview for Yesterday</h2>";
  emailBody += "<table border='1' cellpadding='5' cellspacing='0' style='width: 100%; text-align: center;'>";
  emailBody += "<thead>";
  emailBody += "<tr>";
  emailBody += "<th>Campaign Name</th>";
  emailBody += "<th>Clicks</th>";
  emailBody += "<th>Conversions</th>";
  emailBody += "<th>Cost</th>";
  //emailBody += "<th>Conversion Value</th>";
  emailBody += "<th>CVR</th>";
  emailBody += "<th>CPC</th>";
  //emailBody += "<th>AOV</th>";
  emailBody += "<th>CPA</th>";
  //emailBody += "<th>ROAS</th>";
  emailBody += "</tr>";
  emailBody += "</thead>";
  emailBody += "<tbody>";

  sortedDataYesterday.forEach(function(item) {
    emailBody += "<tr>";
    emailBody += "<td>" + item.name + "</td>";
    emailBody += "<td>" + item.clicks + "</td>";
    emailBody += "<td>" + item.conversions.toFixed(0) + "</td>";
    emailBody += "<td>€" + item.cost.toFixed(2) + "</td>";
    //emailBody += "<td>€" + item.conversionValue.toFixed(0) + "</td>";
    emailBody += "<td>" + item.cvr.toFixed(2) + "%</td>";
    emailBody += "<td>€" + item.cpc.toFixed(2) + "</td>";
    //emailBody += "<td>€" + item.aov.toFixed(2) + "</td>";
    emailBody += "<td>€" + item.cpa.toFixed(2) + "</td>";
    //emailBody += "<td>" + item.roas.toFixed(2) + "</td>";
    emailBody += "</tr>";
  });

  // Add totals row
  emailBody += "<tr style='font-weight: bold;'>";
  emailBody += "<td>Total</td>";
  emailBody += "<td>" + totalsYesterday.clicks + "</td>";
  emailBody += "<td>" + totalsYesterday.conversions.toFixed(0) + "</td>";
  emailBody += "<td>€" + totalsYesterday.cost.toFixed(2) + "</td>";
  //emailBody += "<td>€" + totalsYesterday.conversionValue.toFixed(0) + "</td>";
  emailBody += "<td>" + totalsYesterday.cvr.toFixed(2) + "%</td>";
  emailBody += "<td>€" + totalsYesterday.cpc.toFixed(2) + "</td>";
  //emailBody += "<td>€" + totalsYesterday.aov.toFixed(2) + "</td>";
  emailBody += "<td>€" + totalsYesterday.cpa.toFixed(2) + "</td>";
  //emailBody += "<td>" + totalsYesterday.roas.toFixed(2) + "</td>";
  emailBody += "</tr>";

  emailBody += "</tbody>";
  emailBody += "</table>";

  // Add ROAS to comparison table headers
  emailBody += "<h2>Campaign Performance Comparison (Last 7 Days vs. Last 14 Days)</h2>";
  emailBody += "<table border='1' cellpadding='5' cellspacing='0' style='width: 100%; text-align: center;'>";
  emailBody += "<thead>";
  emailBody += "<tr>";
  emailBody += "<th>Campaign Name</th>";
  emailBody += "<th>CVR (7 Days)</th>";
  emailBody += "<th>CVR (14 Days)</th>";
  emailBody += "<th>CVR Change</th>";
  emailBody += "<th>CPC (7 Days)</th>";
  emailBody += "<th>CPC (14 Days)</th>";
  emailBody += "<th>CPC Change</th>";
  //emailBody += "<th>AOV (7 Days)</th>";
  //emailBody += "<th>AOV (14 Days)</th>";
  //emailBody += "<th>AOV Change</th>";
  emailBody += "<th>CPA (7 Days)</th>";
  emailBody += "<th>CPA (14 Days)</th>";
  emailBody += "<th>CPA Change</th>";
  //emailBody += "<th>ROAS (7 Days)</th>";
  //emailBody += "<th>ROAS (14 Days)</th>";
  //emailBody += "<th>ROAS Change</th>";
  emailBody += "</tr>";
  emailBody += "</thead>";
  emailBody += "<tbody>";

  comparisonResults.forEach(function(result) {
    emailBody += "<tr>";
    emailBody += "<td>" + result.campaignName + "</td>";
    emailBody += "<td>" + result.cvr7Days + "</td>";
    emailBody += "<td>" + result.cvr14Days + "</td>";
    emailBody += "<td>" + result.cvrDiff + "</td>";
    emailBody += "<td>€" + result.cpc7Days + "</td>";
    emailBody += "<td>€" + result.cpc14Days + "</td>";
    emailBody += "<td>" + result.cpcDiff + "</td>";
    //emailBody += "<td>€" + result.aov7Days + "</td>";
    //emailBody += "<td>€" + result.aov14Days + "</td>";
    //emailBody += "<td>" + result.aovDiff + "</td>";
    emailBody += "<td>€" + result.cpa7Days + "</td>";
    emailBody += "<td>€" + result.cpa14Days + "</td>";
    emailBody += "<td>" + result.cpaDiff + "</td>";
    //emailBody += "<td>" + result.roas7Days + "</td>";
    //emailBody += "<td>" + result.roas14Days + "</td>";
    //emailBody += "<td>" + result.roasDiff + "</td>";
    emailBody += "</tr>";
  });

  // Add totals row to comparison table
  var totalComparisonResults = {
    cvr7Days: (totals7Days.cvr).toFixed(2) + '%',
    cvr14Days: (totals14Days.cvr).toFixed(2) + '%',
    cvrDiff: ((totals7Days.cvr - totals14Days.cvr) / totals14Days.cvr * 100).toFixed(2) + '%',
    cpc7Days: totals7Days.cpc.toFixed(2),
    cpc14Days: totals14Days.cpc.toFixed(2),
    cpcDiff: ((totals7Days.cpc - totals14Days.cpc) / totals14Days.cpc * 100).toFixed(2) + '%',
    //aov7Days: totals7Days.aov.toFixed(2),
    //aov14Days: totals14Days.aov.toFixed(2),
    //aovDiff: ((totals7Days.aov - totals14Days.aov) / totals14Days.aov * 100).toFixed(2) + '%',
    cpa7Days: totals7Days.cpa.toFixed(2),
    cpa14Days: totals14Days.cpa.toFixed(2),
    cpaDiff: ((totals7Days.cpa - totals14Days.cpa) / totals14Days.cpa * 100).toFixed(2) + '%',
    //roas7Days: totals7Days.roas.toFixed(2),
    //roas14Days: totals14Days.roas.toFixed(2),
    //roasDiff: ((totals7Days.roas - totals14Days.roas) / totals14Days.roas * 100).toFixed(2) + '%'
  };

  emailBody += "<tr style='font-weight: bold;'>";
  emailBody += "<td>Total</td>";
  emailBody += "<td>" + totalComparisonResults.cvr7Days + "</td>";
  emailBody += "<td>" + totalComparisonResults.cvr14Days + "</td>";
  emailBody += "<td>" + totalComparisonResults.cvrDiff + "</td>";
  emailBody += "<td>€" + totalComparisonResults.cpc7Days + "</td>";
  emailBody += "<td>€" + totalComparisonResults.cpc14Days + "</td>";
  emailBody += "<td>" + totalComparisonResults.cpcDiff + "</td>";
  //emailBody += "<td>€" + totalComparisonResults.aov7Days + "</td>";
  //emailBody += "<td>€" + totalComparisonResults.aov14Days + "</td>";
  //emailBody += "<td>" + totalComparisonResults.aovDiff + "</td>";
  emailBody += "<td>€" + totalComparisonResults.cpa7Days + "</td>";
  emailBody += "<td>€" + totalComparisonResults.cpa14Days + "</td>";
  emailBody += "<td>" + totalComparisonResults.cpaDiff + "</td>";
  //emailBody += "<td>" + totalComparisonResults.roas7Days + "</td>";
  //emailBody += "<td>" + totalComparisonResults.roas14Days + "</td>";
  //emailBody += "<td>" + totalComparisonResults.roasDiff + "</td>";
  emailBody += "</tr>";

  emailBody += "</tbody>";
  emailBody += "</table>";

  // Send email (assuming the email address is correct)
  MailApp.sendEmail({
    to: 'panagiotis.kargidis@amplifyd.co.uk', // Replace with actual recipient
    subject: 'Campaign Performance Report',
    htmlBody: emailBody
  });

  Logger.log('Email sent successfully');
}
